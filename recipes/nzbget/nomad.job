job "nzbget" {
  region      = "[[ .region ]]"
  datacenters = ["[[ .datacenter ]]"]
  type        = "service"

  constraint {
    attribute = "${attr.unique.hostname}"
    operator  = "[[ .app.nzbget.constraints.operator ]]"
    value     = "[[ .app.nzbget.constraints.node ]]"
  }

  group "nzbget" {
    count = 1

    network {
      port "http" { static = 6789 }
    }

    task "nzbget" {
      driver = "docker"

      config {
        image        = "linuxserver/nzbget:v21.0-ls67"
        network_mode = "host"
        ports        = ["http"]
        volumes = [
          "[[ .app.nzbget.volumes.config ]]:/config",
          "[[ .app.nzbget.volumes.downloads ]]:/downloads"
        ]
      }

      env {
        PUID = "[[ .common.env.puid ]]"
        PGID = "[[ .common.env.pgid ]]"
      }

      service {
        port = "http"
        name = "nzbget"
        tags = [
          "traefik.enable=true",
          "traefik.http.middlewares.httpsRedirect.redirectscheme.scheme=https",
          "traefik.http.routers.nzbget_http.entrypoints=http",
          "traefik.http.routers.nzbget_http.middlewares=httpsRedirect",
          "traefik.http.routers.nzbget_http.rule=Host(`[[ .app.nzbget.traefik.domain ]]`)",
          "traefik.http.routers.nzbget_https.entrypoints=https",
          "traefik.http.routers.nzbget_https.rule=Host(`[[ .app.nzbget.traefik.domain ]]`)",
          "traefik.http.routers.nzbget_https.tls.domains[0].sans=[[ .app.nzbget.traefik.domain ]]",
        ]
        check {
          type     = "http"
          path     = "/"
          interval = "10s"
          timeout  = "2s"
        }
      }

      resources {
        cpu    = 1024
        memory = 1024
      }
    }
  }
}
