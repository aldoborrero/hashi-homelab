job "plex" {
  region      = "[[ .nomad.region ]]"
  datacenters = ["[[ .nomad.datacenter ]]"]
  type        = "service"

  constraint {
    attribute = "${attr.unique.hostname}"
    operator  = "[[ .app.plex.constraints.operator ]]"
    value     = "[[ .app.plex.constraints.node ]]"
  }

  group "plex" {
    count = 1

    network {
      port "http" { static = 32400 }
    }

    task "plex" {
      driver = "docker"

      config {
        image        = "plexinc/pms-docker:1.21.1.3876-3c3adfcb4"
        privileged   = "true"
        network_mode = "host"
        ports        = ["http"]
        volumes = [
          "[[ .app.plex.volumes.config ]]:/config",
          "[[ .app.plex.volumes.transcode ]]:/transcode",
          "[[ .app.plex.volumes.root ]]:/data",
        ]
      }

      service {
        port = "http"
        name = "plex"
        tags = [
          "traefik.enable=true",
          "traefik.http.middlewares.httpsRedirect.redirectscheme.scheme=https",
          "traefik.http.routers.plex_http.entrypoints=http",
          "traefik.http.routers.plex_http.middlewares=httpsRedirect",
          "traefik.http.routers.plex_http.rule=Host(`[[ .app.plex.traefik.domain ]]`)",
          "traefik.http.routers.plex_https.entrypoints=https",
          "traefik.http.routers.plex_https.rule=Host(`[[ .app.plex.traefik.domain ]]`)",
          "traefik.http.routers.plex_https.tls.domains[0].sans=[[ .app.plex.traefik.domain ]]",
        ]
        check {
          type     = "tcp"
          interval = "60s"
          timeout  = "20s"

          check_restart {
            limit = 3
            grace = "240s"
          }
        }
      }

      resources {
        cpu    = 1024
        memory = 8192
      }
    }
  }
}
