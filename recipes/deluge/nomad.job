job "deluge" {
  region      = "[[ .nomad.region ]]"
  datacenters = ["[[ .nomad.datacenter ]]"]
  type        = "service"

  constraint {
    attribute = "${attr.unique.hostname}"
    operator  = "[[ .app.deluge.constraints.operator ]]"
    value     = "[[ .app.deluge.constraints.node ]]"
  }

  group "deluge" {
    count = 1

    network {
      port "http" { static = 8112 }
      port "tcp1" { static = 58846 }
      port "tcp2" { static = 58946 }
    }

    task "deluge" {
      driver = "docker"

      config {
        image        = "linuxserver/deluge:version-2.0.3-2201906121747ubuntu18.04.1"
        network_mode = "host"
        ports        = ["http", "tcp1", "tcp2"]
        privileged   = "true"
        volumes = [
          "[[ .app.deluge.volumes.config ]]:/config",
          "[[ .app.deluge.volumes.downloads ]]:/downloads",
        ]
      }

      env {
        PUID      = "[[ .common.env.puid ]]"
        PGID      = "[[ .common.env.pgid ]]"
        TZ        = "UTC"
        UMASK_SET = "18"
      }

      service {
        port = "http"
        name = "deluge"
        tags = [
          "traefik.enable=true",
          "traefik.http.middlewares.httpsRedirect.redirectscheme.scheme=https",
          "traefik.http.routers.deluge_http.entrypoints=http",
          "traefik.http.routers.deluge_http.middlewares=httpsRedirect",
          "traefik.http.routers.deluge_http.rule=Host(`[[ .app.deluge.traefik.domain ]]`)",
          "traefik.http.routers.deluge_https.entrypoints=https",
          "traefik.http.routers.deluge_https.rule=Host(`[[ .app.deluge.traefik.domain ]]`)",
          "traefik.http.routers.deluge_https.tls.domains[0].sans=[[ .app.deluge.traefik.domain ]]",
        ]
        check {
          type     = "http"
          path     = "/"
          interval = "10s"
          timeout  = "2s"
        }
      }

      resources {
        cpu    = 256
        memory = 256
      }
    }
  }
}
