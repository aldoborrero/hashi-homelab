job "pgweb" {
  region      = "[[ .nomad.region ]]"
  datacenters = ["[[ .nomad.datacenter ]]"]
  type        = "service"

  constraint {
    attribute = "${attr.unique.hostname}"
    operator  = "[[ .app.pgweb.constraints.operator ]]"
    value     = "[[ .app.pgweb.constraints.node ]]"
  }

  group "pgweb" {
    count = 1

    network {
      port "http" { static = 8082 }
    }

    task "pgweb" {
      driver = "docker"

      config {
        image        = "sosedoff/pgweb:0.11.6"
        network_mode = "host"
        ports        = ["http"]
        command      = "/usr/bin/pgweb"
        args         = ["--bind=0.0.0.0", "--listen=8082"]
      }

      service {
        port = "http"
        name = "pgweb"
        tags = [
          "traefik.enable=true",
          "traefik.http.middlewares.httpsRedirect.redirectscheme.scheme=https",
          "traefik.http.routers.pgweb_http.entrypoints=http",
          "traefik.http.routers.pgweb_http.middlewares=httpsRedirect",
          "traefik.http.routers.pgweb_http.rule=Host(`[[ .app.pgweb.traefik.domain ]]`)",
          "traefik.http.routers.pgweb_https.entrypoints=https",
          "traefik.http.routers.pgweb_https.rule=Host(`[[ .app.pgweb.traefik.domain ]]`)",
          "traefik.http.routers.pgweb_https.tls.domains[0].sans=[[ .app.pgweb.traefik.domain ]]",
        ]
        check {
          type     = "http"
          path     = "/"
          interval = "10s"
          timeout  = "2s"
        }
      }

      resources {
        memory = 128
      }
    }
  }
}
